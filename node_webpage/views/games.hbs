<h1>Games</h1>

<table>
  <thead>
    <tr>
      <th>ID</th>
      <th>Name</th>
      <th>Genre</th>
      <th>Platform</th>
      <th>Users</th>
      <th>Rating</th>
      <th>Description</th>
      <th>Actions</th>
    </tr>
  </thead>
  <tbody>
    {{#each games}}
    <tr>
      <td>{{gameID}}</td>
      <td>{{name}}</td>
      <td>{{genre}}</td>
      <td>{{platform}}</td>
      <td>{{numUsers}}</td>
      <td>{{rating}}</td>
      <td>{{description}}</td>
      <td>
        <form action="/delete-game" method="POST">
          <input type="hidden" name="gameID" value="{{gameID}}" />
          <button type="submit">Delete</button>
        </form>
      </td>
    </tr>
    {{/each}}
  </tbody>
</table>


<h1>Add Game</h1>
<form action="/add-game" method="POST" id="addGameForm">
  <div class="formGroup">

    <div class="formTitle">
      <label for="name">Game Name</label>
      <input type="text" id="name" name="name" required>
    </div>
    <div class="formTitle">
      <label for="addGenreID">Genre ID</label>
      <select id="addGenreID" name="genreID" required></select>
    </div>

    <div class="formTitle">
      <label for="addPlatformID">Platform ID</label>
      <select id="addPlatformID" name="platformID" required></select>
    </div>
  </div>

  <div class="formGroup">
    <div class="formTitle">
      <label for="numUsers">Number of Users</label>
      <input type="number" id="numUsers" name="numUsers" min="0" required>
    </div>

    <div class="formTitle">
      <label for="rating">Rating (1–10)</label>
      <input type="number" id="rating" name="rating" min="1" max="10" required>
    </div>

    <div class="formTitle">
      <label for="description">Description</label>
      <textarea id="description" name="description" rows="4" required></textarea>
    </div>

  </div>
  <button type="submit">Add Game</button>

</form>

<h1>Update Game</h1>
<form action="/edit-game" method="POST" id="updateGameForm">
  <div class="formGroup">
    <div class="formTitle">
      <label for="name">Game Name</label>
      <select id="gameSelect" name="gameID" required>
      <option value="">Select a game</option>
      {{#each games}}
        <option 
          value="{{gameID}}" 
          data-name="{{name}}" 
          data-numusers="{{numUsers}}"
          data-rating="{{rating}}"
          data-description="{{description}}"
          {{#if @first}}selected{{/if}}>{{name}}</option>
      {{/each}}
      </select>
    </div>
    <span class="arrow">&rarr;</span>
    <div class="formTitle">
      <label for="gameName">New Game Name</label>
      <input type="text" id="gameName" name="name" required />
    </div>
  </div>

  <div class="formGroup">
    <div class="formTitle">
      <label for="updateGenreID">Genre ID</label>
      <select id="updateGenreID" name="genreID" required></select>
    </div>
    <div class="formTitle">
      <label for="updatePlatformID">Platform ID</label>
      <select id="updatePlatformID" name="platformID" required></select>
    </div>
    <div class="formTitle">
      <label for="UPnumUsers">Number of Users</label>
      <input type="number" id="UPnumUsers" name="numUsers" value="0" required />
    </div>
  </div>
  <div class="formGroup">
    <div class="formTitle">
      <label for="UPrating">Rating (1–10)</label>
      <input type="number" id="UPrating" name="rating" value="10" min="1" max="10" required />
    </div>

    <div class="formTitle">
      <label for="UPdescription">Description</label>
      <textarea id="UPdescription" name="description" rows="4" required></textarea>
    </div>
  </div>
  <button type="submit">Update Game</button>
</form>
<script>
  
  
  fetch('/get-platforms')
    .then(res => res.json())
    .then(data => {
      const addSelect = document.getElementById('addPlatformID');
      const updateSelect = document.getElementById('updatePlatformID');
      data.forEach(platform => {
        if (platform && platform.platformID && platform.platform) {
          const option1 = document.createElement('option');
          option1.value = platform.platformID;
          option1.textContent = platform.platform;
          addSelect.appendChild(option1);

          const option2 = option1.cloneNode(true);
          updateSelect.appendChild(option2);
        }
      });
    });
  
  fetch('/get-genres')
    .then(res => res.json())
    .then(data => {
      const addSelect = document.getElementById('addGenreID');
      const updateSelect = document.getElementById('updateGenreID');
      data.forEach(genre => {
        if (genre && genre.genreID && genre.name) {
          const option1 = document.createElement('option');
          option1.value = genre.genreID;
          option1.textContent = genre.name;
          addSelect.appendChild(option1);

          const option2 = option1.cloneNode(true);
          updateSelect.appendChild(option2);
        }
      });
    });
    //Live dropdown for updating game details
  const gameSelect = document.getElementById('gameSelect');
  const gameNameInput = document.getElementById('gameName');
  const numUsersInput = document.getElementById('UPnumUsers');
  const ratingInput = document.getElementById('UPrating');
  const descriptionInput = document.getElementById('UPdescription');


    function updateFields() {
    const selectedOption = gameSelect.options[gameSelect.selectedIndex];
    if (!selectedOption.value) {
      //Clear fields if no game selected
      gameNameInput.value = '';
      numUsersInput.value = 0;
      ratingInput.value = 10;
      descriptionInput.value = '';
      return;
    }

    gameNameInput.value = selectedOption.getAttribute('data-name') || '';
    numUsersInput.value = selectedOption.getAttribute('data-numusers') || 0;
    ratingInput.value = selectedOption.getAttribute('data-rating') || 10;
    descriptionInput.value = selectedOption.getAttribute('data-description') || '';
  }
    window.addEventListener('DOMContentLoaded', updateFields);
    gameSelect.addEventListener('change', updateFields);
    gameSelect.addEventListener('change', updateGameName);
</script>